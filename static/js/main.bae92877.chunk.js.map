{"version":3,"sources":["header.js","card.js","top-card-list.js","card-small.js","overview.js","switch.js","App.js","serviceWorker.js","index.js"],"names":["Header","children","className","Card","username","followers","todayFollowers","icon","name","cardClass","src","alt","cardListData","id","TopCardList","map","cardData","key","CardSmall","growth","pageViews","CardSmallList","Overview","Switch","ref","useRef","onChange","event","current","checked","document","body","classList","remove","add","type","htmlFor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bae92877.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\n\r\n\r\nfunction Header( {children} ) {\r\n    return(\r\n        <header className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"header-grid\">\r\n          <div>\r\n            <h1>Social Media Dashboard</h1>\r\n            <p className=\"header-total\">Total followers: 23, 004</p>\r\n          </div>\r\n          {children}\r\n          \r\n        </div>\r\n      </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './card.css';\r\n\r\nfunction Card ({username, followers, todayFollowers, icon, name}) {\r\n    const cardClass = `card ${name}`\r\n    \r\n    return (\r\n        <article className={cardClass}>\r\n            <p className=\"card-title\">\r\n                <img src={icon} alt=\"\"/>\r\n                {username}\r\n            </p>\r\n            <p className=\"card-followers\">\r\n                <span className=\"card-followers-number\"> {followers} </span>\r\n                <span className=\"card-followers-title\">Followers</span>\r\n            </p>\r\n            <p className=\"card-today\">\r\n                <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                {todayFollowers} Today\r\n            </p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card.js';\r\nimport './top-card.css'\r\n\r\nconst cardListData = [\r\n  {\r\n    username:'@Pepito',\r\n    id: 1,\r\n    followers: '1500',\r\n    todayFollowers: 12,\r\n    icon:'images/icon-facebook.svg',\r\n    name: 'facebook',\r\n  },\r\n  {\r\n    username:'@Pepitus',\r\n    id: 2,\r\n    followers: '5k',\r\n    todayFollowers: 21,\r\n    icon:'images/icon-twitter.svg',\r\n    name: 'twitter',\r\n  },\r\n  {\r\n    username:'@Papito',\r\n    id: 3,\r\n    followers: '28k',\r\n    todayFollowers: 30,\r\n    icon: 'images/icon-instagram.svg',\r\n    name: 'instagram',\r\n  },\r\n  {\r\n    username:'@Patata',\r\n    id: 4,\r\n    followers: '6k',\r\n    todayFollowers: -50,\r\n    icon: 'images/icon-youtube.svg',\r\n    name: 'youtube',\r\n  },\r\n]\r\n\r\nfunction TopCardList () {\r\n    return(\r\n        <section className=\"top-cards\">\r\n    <div className=\"wrapper\">\r\n      <div className=\"grid\">\r\n        {\r\n          cardListData.map( (cardData) => <Card key={cardData.id} {...cardData} /> )\r\n        }\r\n        \r\n        \r\n       {/*  <article className=\"card twitter\">\r\n          <p className=\"card-title\">\r\n            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\r\n            @LeonidasEsteban\r\n          </p>\r\n          <p className=\"card-followers\">\r\n            <span className=\"card-followers-number\">28k</span>\r\n            <span className=\"card-followers-title\">Followers</span>\r\n          </p>\r\n          <p className=\"card-today\">\r\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n            12 Today\r\n          </p>\r\n        </article>\r\n        <article className=\"card instagram\">\r\n          <p className=\"card-title\">\r\n            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\r\n            @LeonidasEsteban\r\n          </p>\r\n          <p className=\"card-followers\">\r\n            <span className=\"card-followers-number\">6k</span>\r\n            <span className=\"card-followers-title\">Followers</span>\r\n          </p>\r\n          <p className=\"card-today\">\r\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n            12 Today\r\n          </p>\r\n        </article>\r\n        <article className=\"card youtube\">\r\n          <p className=\"card-title\">\r\n            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\r\n            @LeonidasEsteban\r\n          </p>\r\n          <p className=\"card-followers\">\r\n            <span className=\"card-followers-number\">12k</span>\r\n            <span className=\"card-followers-title\">Followers</span>\r\n          </p>\r\n          <p className=\"card-today\">\r\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n            12 Today\r\n          </p>\r\n        </article> */}\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TopCardList;","import React from 'react';\r\nimport './card-small.css';\r\n\r\nexport default function CardSmall ({growth, pageViews, icon}) {\r\n    return (\r\n        <div className=\"card-small\">\r\n            <p className=\"card-small-views\">Page Views</p>\r\n            <p className=\"card-small-icon\">\r\n                <img src={icon} alt=\"\"/>\r\n            </p>\r\n            <p className=\"card-small-number\">{pageViews}</p>\r\n            <p className=\"card-small-percentage\">\r\n                <span>\r\n                    <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                    {growth}%\r\n                </span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport CardSmall from './card-small.js';\r\nimport './overview.css';\r\n\r\nconst CardSmallList = [\r\n    {\r\n        icon: 'images/icon-facebook.svg',\r\n        pageViews: '87',\r\n        growth: 3,\r\n        key: 1,\r\n    },\r\n    {\r\n        icon: 'images/icon-twitter.svg',\r\n        pageViews: '58',\r\n        growth: 8,\r\n        key: 2,\r\n    },\r\n    {\r\n        icon: 'images/icon-instagram.svg',\r\n        pageViews: '1234',\r\n        growth: 25,\r\n        key: 3,\r\n    },\r\n    {\r\n        icon: 'images/icon-youtube.svg',\r\n        pageViews: '5000',\r\n        growth: 40,\r\n        key: 4,\r\n    },\r\n    \r\n]\r\n\r\nfunction Overview () {\r\n    return (\r\n        <section className=\"overview\">\r\n            <div className=\"wrapper\">\r\n                <h2>Overview - Today</h2>\r\n                <div className=\"grid\">\r\n                    {\r\n                        CardSmallList.map( ({icon, pageViews, growth, key})=> (\r\n                            <CardSmall \r\n                                icon = {icon}\r\n                                key = {key}\r\n                                pageViews = {pageViews}\r\n                                growth = {growth}\r\n                            />\r\n                        ))\r\n                    }\r\n                    \r\n                    \r\n\r\n                    {/* <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Likes</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-facebook.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">52</p>\r\n                        <p className=\"card-small-percentage is-danger\">\r\n                            <span>\r\n                                <img src=\"images/icon-down.svg\" alt=\"\"/>\r\n                                2%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Likes</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">5462</p>\r\n                        <p className=\"card-small-percentage\">\r\n                            <span>\r\n                                <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                                2257%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Profile Views</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">52k</p>\r\n                        <p className=\"card-small-percentage\">\r\n                            <span>\r\n                                <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                                1375%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Retweets</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">117</p>\r\n                        <p className=\"card-small-percentage\">\r\n                            <span>\r\n                                <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                                303%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Likes</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">507</p>\r\n                        <p className=\"card-small-percentage\">\r\n                            <span>\r\n                                <img src=\"images/icon-up.svg\" alt=\"\"/>\r\n                                553%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Likes</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">107</p>\r\n                        <p className=\"card-small-percentage is-danger\">\r\n                            <span>\r\n                                <img src=\"images/icon-down.svg\" alt=\"\"/>\r\n                                19%\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-small\">\r\n                        <p className=\"card-small-views\">Total Views</p>\r\n                        <p className=\"card-small-icon\">\r\n                            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\r\n                        </p>\r\n                        <p className=\"card-small-number\">1407</p>\r\n                        <p className=\"card-small-percentage is-danger\">\r\n                            <span>\r\n                                <img src=\"images/icon-down.svg\" alt=\"\"/>\r\n                                12%\r\n                            </span>\r\n                        </p>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Overview;","import React, {useRef, useEffect} from 'react';\r\nimport './switch.css';\r\n\r\nfunction Switch () {\r\n    //referencia a un valor que puede cambiar\r\n    const ref = useRef(null);\r\n\r\n    function handleChange (event) {\r\n        if (ref.current.checked) {\r\n            document.body.classList.remove('is-light-mode')\r\n            document.body.classList.add('is-dark-mode')\r\n        } else {\r\n            document.body.classList.remove('is-dark-mode')\r\n            document.body.classList.add('is-light-mode')\r\n        }\r\n    }\r\n\r\n   \r\n\r\n   /*  useEffect(()=>{\r\n        if(Window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n            ref.current.setAttribute('checked',true)\r\n        }\r\n    }, [])\r\n */\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"dark-mode\" >\r\n            <p className=\"dark-mode-title\">Dark Mode</p>\r\n            <input ref={ref} onChange={handleChange }  type=\"checkbox\" className=\"checkbox\" id=\"checkbox\"/>\r\n            <label className=\"switch\" htmlFor=\"checkbox\"></label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Switch;\r\n","import React from 'react';\nimport './globals.css';\nimport Header from './header.js';\nimport TopCardList from './top-card-list.js';\nimport Overview from './overview.js';\nimport Switch from './switch.js';\n\nfunction App() {\n  return (\n    <>\n      <Header>\n        \n        <Switch />\n        \n      </Header>\n      \n      <TopCardList/>\n      <Overview />\n    </>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}